// Generated by CoffeeScript 1.10.0
(function() {
  var del, developServer, gulp, mocha, notify, runSequence;

  gulp = require('gulp');

  del = require('del');

  runSequence = require('run-sequence');

  developServer = require('gulp-develop-server');

  notify = require('gulp-notify');

  mocha = require('gulp-mocha');

  gulp.task('default', function(callback) {
    return runSequence(['clean'], ['copyFiles'], ['serve', 'watch', 'test'], callback);
  });

  gulp.task('clean', function(callback) {
    return del(['./dist/'], callback);
  });

  gulp.task('copyFiles', function() {
    return gulp.src(['./src/**/*.js', './src/*/*.db']).pipe(gulp.dest('./dist/'));
  });

  gulp.task('serve', function() {
    return developServer.listen({
      path: './dist/index.js'
    });
  });

  gulp.task('watch', function() {
    return gulp.watch(['./src/**/*.js'], ['reload']);
  });

  gulp.task('test', function() {
    return gulp.watch(['./test/**/*.coffee'], ['mochaSequence']);
  });

  gulp.task('cleanDb', function(callback) {
    return del(['./dist/database'], callback);
  });

  gulp.task('mocha', function() {
    return gulp.src('./test/**/*.js').pipe(mocha());
  });

  gulp.task('mochaSequence', function(callback) {
    return runSequence(['cleanDb'], ['mocha'], callback);
  });

  gulp.task('reload', function(callback) {
    return runSequence(['copyFiles'], ['reload-node'], ['mochaSequence'], callback);
  });

  gulp.task('reload-node', function() {
    developServer.restart();
    return gulp.src('./dist/index.js').pipe(notify('Server restarted...'));
  });

}).call(this);

//# sourceMappingURL=gulpfile.js.map
