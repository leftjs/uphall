// Generated by CoffeeScript 1.10.0
(function() {
  var config, db, jwt, login, md5Util, register, validateUserExist;

  jwt = require('jsonwebtoken');

  db = require('./../libs/db');

  config = require('./../config/config');

  md5Util = require('./../utils/md5Util');

  validateUserExist = function(req, res, next) {
    var body;
    body = req.body;
    if (!body || !body.username || !body.password) {
      return next('请提交完整的用户注册信息');
    }
    return db.users.findOne({
      username: req.body.username
    }, function(err, user) {
      if (err) {
        return next(err);
      }
      if (user) {
        return next('用户已注册，无法再次注册');
      }
      return next();
    });
  };

  register = function(req, res, next) {
    var body, postData;
    body = req.body;
    postData = {
      name: '匿名',
      username: body.username,
      password: md5Util.md5(body.password),
      token: '',
      expiredTime: Date.now(),
      is_admin: body.is_admin != null ? body.is_admin : body.is_admin = false,
      is_shopper: body.is_shopper != null ? body.is_shopper : body.is_shopper = false
    };
    return db.users.insert(postData, function(err, user) {
      if (err) {
        return next(err);
      }
      return res.send({
        id: user._id
      });
    });
  };

  login = function(req, res, next) {
    var base, password, username;
    username = req.body.username;
    password = md5Util.md5((base = req.body).password != null ? base.password : base.password = '');
    return db.users.findOne({
      username: username,
      password: password
    }, function(err, user) {
      var expiredTime, token;
      if (err) {
        return next(err);
      }
      if (!user) {
        return next('用户名或密码错误');
      }
      token = jwt.sign({
        username: username
      }, config.secret);
      expiredTime = Date.now() + config.tokenExpiredTime;
      return db.users.update({
        _id: user._id
      }, {
        $set: {
          token: token,
          expiredTime: expiredTime
        }
      }, function(err, numReplaced) {
        if (err) {
          return next(err);
        }
        if (numReplaced === 0) {
          return next("登录失败，请重试");
        }
        return res.json({
          token: token,
          expiredTime: expiredTime
        });
      });
    });
  };

  module.exports = {
    validateUserExist: validateUserExist,
    register: register,
    login: login
  };

}).call(this);

//# sourceMappingURL=userBiz.js.map
